<?php

/**
 * @file
 * Code for the Event to HRInfo.
 */

/**
 * Implements hook_menu().
 */
function event_to_hrinfo_menu() {
  $items['events-to-hrinfo'] = array(
    'title' => 'API for events to HRInfo',
    'page callback' => 'event_to_hrinfo_fetch_events',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Fetch events for HRInfo.
 */
function event_to_hrinfo_fetch_events() {
  // Fixed date range.
  $start = strtotime('2018-02-20');
  $end = strtotime('2021-07-01');

  // Round to midnight.
  $start = $start - (60 * 60 * 24) - ($start % 86400);
  $end = $end + (60 * 60 * 24) - ($end % 86400);

  // Limit to Ethiopia.
  $ethiopia = events_config_get_location_term('Ethiopia');
  $query_filters = array(
    'field_event_location' => array('value' => $ethiopia->tid),
    'field_event_source' => array('value' => FALSE),
  );

  $data = events_event_fetch_events_from_search_api($start, $end, $query_filters, FALSE, '');
  $nids = array_flip($data['nids']);

  $events = array();

  // Load event data.
  if (!empty($nids)) {
    // Exclude already migrated events.
    $nids = array_diff(array_keys($nids), _events_to_hrinfo_already_done());

    $event_nodes = node_load_multiple($nids);
    foreach ($event_nodes as $event_node) {
      $events[] = event_to_hrinfo_build_data($event_node);
    }
  }

  events_event_json_output($events);
}

/**
 * Delete the events for HRInfo.
 */
function event_to_hrinfo_delete_events() {
  // Fixed date range.
  $start = strtotime('2017-07-01');
  $end = strtotime('now');

  // Round to midnight.
  $start = $start - (60 * 60 * 24) - ($start % 86400);
  $end = $end + (60 * 60 * 24) - ($end % 86400);

  // Limit to Ethiopia.
  $ethiopia = events_config_get_location_term('Ethiopia');
  $query_filters = array(
    'field_event_location' => array('value' => $ethiopia->tid),
    'field_event_source' => array('value' => FALSE),
  );

  $data = events_event_fetch_events_from_search_api($start, $end, $query_filters, FALSE, '');
  $nids = array_flip($data['nids']);

  // Load event data.
  if (!empty($nids)) {
    node_delete_multiple(array_keys($nids));
  }
}

/**
 * Build data structure.
 */
function event_to_hrinfo_build_data($event) {
  $e = entity_metadata_wrapper('node', $event);

  $author = array(
    'name' => isset($e->author->value()->realname) ? $e->author->value()->realname : $e->author->name->value(),
    'email' => $e->author->mail->value(),
    'timezone' => $e->author->value()->timezone,
    'init' => $e->author->value()->init,
    'language' => $e->author->language->value(),
  );

  $row = array(
    'nid' => $e->getIdentifier(),
    'title' => $e->title->value(),
    'created' => $e->created->value(),
    'changed' => $e->changed->value(),
    'category' => $e->field_event_category->getIdentifier() ? $e->field_event_category->name->value() : '',
    'date' => $e->field_event_date[0]->value(),
    'location' => $e->field_event_location->getIdentifier() ? $e->field_event_location->name->value() : '',
    'location_id' => $e->field_event_location->getIdentifier() ? $e->field_event_location->getIdentifier() : NULL,
    'location_details' => $e->field_event_location_details->value(),
    'description' => $e->field_event_info->raw(),
    'url' => url('node/' . $e->getIdentifier(), array('absolute' => TRUE)),
    'country' => '',
  );

  foreach ($e->field_event_theme as $theme) {
    $row['themes'][] = $theme->name->value();
  }

  foreach ($e->field_event_disasters as $disaster) {
    if ($disaster->value() && isset($disaster->title)) {
      $row['disasters'][] = $disaster->title->value();
    }
  }

  foreach ($e->field_event_organization as $organization) {
    $row['organizations'][] = $organization->name->value();
  }

  $row['coordination_hubs'][] = $e->field_event_coordination_hub->value();

  foreach ($e->field_event_cluster as $bundle) {
    if ($bundle->value() && isset($bundle->name)) {
      $row['bundles'][] = $bundle->name->value();
    }
  }

  $row['author'] = $author;

  return $row;
}

/**
 * List of nids already migrated.
 */
function _events_to_hrinfo_already_done() {
  return array(
    33,
    44,
    49,
    54,
    59,
    79,
    109,
    129,
    139,
    144,
    149,
    154,
    194,
    199,
    204,
    209,
    214,
    219,
    224,
    229,
    234,
    239,
    244,
    249,
    259,
    264,
    269,
    274,
    279,
    284,
    289,
    294,
    299,
    304,
    309,
    319,
    329,
    334,
    339,
    344,
    354,
    359,
    364,
    369,
    374,
    379,
    384,
    389,
    394,
    404,
    414,
    419,
    424,
    434,
    439,
    444,
    449,
    454,
    459,
    474,
    479,
    484,
    489,
    499,
    504,
    514,
    519,
    524,
    529,
    534,
    539,
    549,
    554,
    559,
    564,
    569,
    574,
    579,
    594,
    599,
    604,
    609,
    614,
    619,
    624,
    629,
    634,
    639,
    644,
    649,
    654,
    669,
    674,
    679,
    684,
    689,
    694,
    699,
    704,
    714,
    719,
    724,
    734,
    739,
    749,
    754,
    759,
    764,
    774,
    784,
    789,
    794,
    799,
    804,
    809,
    814,
    819,
    824,
    829,
    834,
    839,
    844,
    849,
    854,
    859,
    864,
    869,
    874,
    879,
    884,
    889,
    894,
    904,
    914,
    919,
    924,
    929,
    934,
    939,
    944,
    949,
    954,
    959,
    964,
    969,
    974,
    979,
    999,
    1004,
    1009,
    1014,
    1019,
    1044,
    1049,
    1064,
  );
}
