<?php
/**
 * @file
 * Main code for module Locale Context.
 */

module_load_include('inc', 'locale_translation_context', 'locale_translation_context.rewrite');

/**
 * Implements hook_menu_alter().
 */
function locale_translation_context_menu_alter(&$items) {
  $items['admin/config/regional/translate/translate']['page callback'] = 'locale_translation_context_locale_translate_seek_screen';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function locale_translation_context_form_locale_translation_filter_form_alter(&$form, &$form_state) {
  // Get all contexts.
  $contexts = locale_translation_context_get_contexts();

  $form['filters']['status']['context'] = array(
    '#title' => t('Context'),
    '#type' => 'select',
    '#empty_value' => 'all',
    '#empty_option' => t('All contexts'),
    '#size' => 0,
    '#options' => $contexts,
  );

  if (!empty($_SESSION['locale_translation_filter']['context'])) {
    $form['filters']['status']['context']['#default_value'] = $_SESSION['locale_translation_filter']['context'];
  }

  // Attach css for new form field.
  $form['#attached']['css'][] = drupal_get_path('module', 'locale_translation_context') . '/theme/css/locale-translation-context.css';

  // Override submit function to use our own.
  $form['#submit'] = array('locale_translation_context_locale_translation_filter_form_submit');
}

/**
 * Implements hook_form_alter().
 */
function locale_translation_context_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'locale_translate_export_po_form':
    case 'locale_translate_export_pot_form':
      locale_translation_context_po_pot_form_alter($form, $form_state);
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function locale_translation_context_po_pot_form_alter(&$form, &$form_state) {

  // Get all contexts.
  $contexts = locale_translation_context_get_contexts();

  $form['context'] = array(
    '#title' => t('Context'),
    '#type' => 'select',
    '#empty_value' => 'all',
    '#empty_option' => t('All contexts'),
    '#size' => 0,
    '#weight' => 10,
    '#options' => $contexts,
  );

  $form['export_title']['#weight'] = 0;
  $form['langcode']['#weight'] = 5;
  $form['group']['#weight'] = 15;

  // Attach css for new form field.
  $form['#attached']['css'][] = drupal_get_path('module', 'locale_translation_context') . '/theme/css/locale-translation-context.css';

  // Override submit function to use our own.
  $form['#submit'] = array('locale_translation_context_locale_translate_export_po_form_submit');
}

/**
 * Implements hook_help().
 */
function locale_translation_context_help($path, $arg) {
  switch ($path) {
    case 'admin/help#locale_translation_context':
      // Return a line-break version of the module README.txt.
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Get all the available string translation contexts.
 *
 * @return array
 *   An array of string translation contexts keyed by context_id.
 */
function locale_translation_context_get_contexts() {
  // Get all contexts.
  $contexts = array();
  $result = db_select('locales_source', 'ls')
    ->fields('ls', array('context'))
    ->condition('ls.context', '', '<>')
    ->distinct()
    ->orderBy('ls.context')
    ->execute();

  while ($record = $result->fetchAssoc()) {
    $contexts[$record['context']] = $record['context'];
  }

  return $contexts;
}
